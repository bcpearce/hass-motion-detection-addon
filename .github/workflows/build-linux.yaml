name: Build Project (Linux)

on:
  - push
  - pull_request

env:
  USERNAME: bcpearce
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_EXE: ${{ github.workspace }}/vcpkg/vcpkg
  VCPKG_GIT_REF: 8f54ef5453e7e76ff01e15988bf243e7247c5eb5
  FEED_URL: https://nuget.pkg.github.com/bcpearce/index.json
  VCPKG_BINARY_SOURCES: "clear;nuget,https://nuget.pkg.github.com/bcpearce/index.json,readwrite"

jobs:

  build_and_test:
    name: Build and Test (Linux)
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        include:
          - arch: amd64
            os: ubuntu-24.04
          - arch: arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    container:
      image: bcpearce/opencv-cmake:v1-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
      - name: Get VCPKG
        run: |
            git clone https://github.com/microsoft/vcpkg.git ${{ env.VCPKG_ROOT }}
            cd ${{ env.VCPKG_ROOT }} && git checkout ${{ env.VCPKG_GIT_REF }}
      - name: Bootstrap vcpkg
        run: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh
      - name: Add NuGet sources
        env:
          VCPKG_EXE: ${{ github.workspace }}/vcpkg/vcpkg
          USERNAME: bcpearce
          FEED_URL: https://nuget.pkg.github.com/bcpearce/index.json
        run: |
          mono `${{ env.VCPKG_EXE }} fetch nuget | tail -n 1` \
            sources add \
            -Source "${{ env.FEED_URL }}" \
            -StorePasswordInClearText \
            -Name GitHubPackages \
            -UserName "${{ env.USERNAME }}" \
            -Password "${{ secrets.GH_PACKAGES_TOKEN }}"
          mono `${{ env.VCPKG_EXE }} fetch nuget | tail -n 1` \
            setapikey "${{ secrets.GH_PACKAGES_TOKEN }}" \
            -Source "${{ env.FEED_URL }}"
      - name: Generate and Configure Debug
        run: cmake . --preset=Debug -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake
      - name: Build Debug
        run: cmake --build build/Debug
      - name: Test Debug
        run: ./build/Debug/tests/MotionDetectionTests --gtest_output=xml
      - name: Generate and Configure Release
        run: cmake . --preset=Release -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake
      - name: Build Release
        run: cmake --build build/Release
      - name: Test Release
        run: ./build/Release/tests/MotionDetectionTests --gtest_output=xml
      - name: Pack
        run: cd build/Release && cpack -G DEB  -DCPACK_DEBIAN_FILE_NAME=motion-detection-${{ matrix.arch }}.deb
      - name: Upload .deb Artifact
        uses: actions/upload-artifact@v4
        with:
          name: motion-detection-deb-${{ matrix.arch }}
          path: build/Release/motion-detection-${{ matrix.arch }}.deb
          if-no-files-found: error

  build_and_upload_image:
    name: Build and Upload Docker Image (Linux)
    needs: build_and_test
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        include:
          - arch: amd64
            os: ubuntu-24.04
          - arch: arm64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download packed build
        uses: actions/download-artifact@v4
        with:
          name: motion-detection-deb-${{ matrix.arch }}
          path: ${{ github.workspace }}/docker/deploy
      - run: ls -R
        if: runner.debug == '1'
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/deploy/Dockerfile
          build-args: MOTION_DETECTION_DEB=./docker/deploy/motion-detection-${{ matrix.arch }}.deb
          push: true
          tags: |
              ${{ vars.DOCKERHUB_USERNAME }}/hass-motion-detection-addon:latest
              ${{ vars.DOCKERHUB_USERNAME }}/hass-motion-detection-addon:${{ github.ref_name }}